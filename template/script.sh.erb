#!/usr/bin/env bash
#
# Load modules
#

set -x

echo "Script starting..."
echo "Waiting for RStudio Server to open port ${port}..."
echo "TIMING - Starting wait at: $(date)"


echo "Load modules."
module purge
module load proot
module load <%= context.auto_modules_r %>
module list
echo "Module load completed."

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec /usr/lib/rstudio-server/bin/rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"



export MY_TMP_DIR=$(mktemp -d -t rstudio_${USER}_server-XXXX)
mkdir -p ${MY_TMP_DIR}/var/lib/rstudio-server
mkdir -p ${MY_TMP_DIR}/var/run/rstudio-server

cat /proc/sys/kernel/random/uuid > "${MY_TMP_DIR}/var/run/rstudio-server/secure-cookie-key"
chmod 0600 "${MY_TMP_DIR}/var/run/rstudio-server/secure-cookie-key"

export RSTUDIO_DB_FILE="${MY_TMP_DIR}/var/lib/rstudio-server/rstudio-os.sqlite"
touch ${RSTUDIO_DB_FILE}
chmod 0600 ${RSTUDIO_DB_FILE}


echo "Starting up rserver..."


# Generate a secure cookie key
# Where to keep rstudio-server database.
export RSTUDIO_DATABASE_CONFIG=${PWD}/database.conf
cat > ${RSTUDIO_DATABASE_CONFIG} <<- EOF
	provider=sqlite
	directory=${PWD}
	EOF

# Working and data directories. Maybe make these user-selectable?
export RSTUDIO_SERVER_WORKING_DIR=/tmp/rserver-${SLURM_JOB_ID}.working
[[ -d ${RSTUDIO_SERVER_WORKING_DIR} ]] || mkdir -p ${RSTUDIO_SERVER_WORKING_DIR} 

export RSTUDIO_SERVER_DATA_DIR=/tmp/rserver-${SLURM_JOB_ID}.data
[[ -d ${RSTUDIO_SERVER_DATA_DIR} ]] || mkdir -p ${RSTUDIO_SERVER_DATA_DIR}

# Where to put the cookie?
export RSTUDIO_SECURE_COOKIE_KEY_FILE=${PWD}/secure-cookie-key


# Set current working directory to home directory
cd "${HOME}"

ulimit -c 400

# Launch the RStudio Server
echo "Starting up rserver..."


apptainer exec /usr/lib/rstudio-server/bin/rserver \
  --auth-timeout-minutes 0 \
  --server-daemonize 0 \
  --auth-encrypt-password 0 \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --database-config-file ${RSTUDIO_DATABASE_CONFIG} \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  --secure-cookie-key-file ${RSTUDIO_SECURE_COOKIE_KEY_FILE} \
  --server-data-dir ${RSTUDIO_SERVER_DATA_DIR} \
  --server-user ${USER} \
  --server-working-dir ${RSTUDIO_SERVER_WORKING_DIR} \
  --www-port ${port} 




#  apptainer exec --bind ${MY_TMP_DIR}/var/lib/rstudio-server:/var/lib/rstudio-server \
#  --bind ${MY_TMP_DIR}/var/run/rstudio-server:/var/run/rstudio-server \
#  --home /home/oodadmin:/home/oodadmin \
#  ${RSTUDIO_SERVER_IMAGE} \
#  /usr/lib/rstudio-server/bin/rserver \
#  --auth-none 1 \
#  --www-port=${port} \
#  --secure-cookie-key-file=/var/run/rstudio-server/secure-cookie-key \
#  --database-config-file=/var/lib/rstudio-server/rstudio-os.sqlite &

sleep 5
